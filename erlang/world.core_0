module 'hehe' ['hello'/0,
	       'module_info'/0,
	       'module_info'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[119|[111|[114|[108|[100|[46|[101|[114|[108]]]]]]]]],1}],
		%% Line 1
		'file' =
		    %% Line 1
		    [{[119|[111|[114|[108|[100|[46|[104|[114|[108]]]]]]]]],1}],
		%% Line 5
		'file' =
		    %% Line 5
		    [{[119|[111|[114|[108|[100|[46|[101|[114|[108]]]]]]]]],5}]]
'hello'/0 =
    %% Line 6
    ( fun () ->
	  ( case ( <>
		   -| [{'function',{'hello',0}}] ) of
	      <> when 'true' ->
		  [104|[101|[108|[108|[111|[32|[119|[111|[114|[108|[100|[33]]]]]]]]]]]]
	      ( <> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause'}
			     -| [{'function',{'hello',0}}] ))
		      -| [{'function',{'hello',0}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'hello',0}}] )
      -| [{'function',{'hello',0}}] )
'module_info'/0 =
    ( fun () ->
	  ( case ( <>
		   -| [{'function',{'module_info',0}}] ) of
	      <> when 'true' ->
		  call 'erlang':'get_module_info'
		      ('hehe')
	      ( <> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause'}
			     -| [{'function',{'module_info',0}}] ))
		      -| [{'function',{'module_info',0}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'module_info',0}}] )
      -| [{'function',{'module_info',0}}] )
'module_info'/1 =
    ( fun (_0) ->
	  ( case ( _0
		   -| [{'function',{'module_info',1}}] ) of
	      <X> when 'true' ->
		  call 'erlang':'get_module_info'
		      ('hehe', X)
	      ( <_1> when 'true' ->
		    ( primop 'match_fail'
			  (( {'function_clause',_1}
			     -| [{'function',{'module_info',1}}] ))
		      -| [{'function',{'module_info',1}}] )
		-| ['compiler_generated'] )
	    end
	    -| [{'function',{'module_info',1}}] )
      -| [{'function',{'module_info',1}}] )
end